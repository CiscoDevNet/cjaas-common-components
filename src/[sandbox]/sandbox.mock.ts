import { ProfileView } from "../components/profile/Profile";
import { MultiLineCondition } from "@/components/condition-block/ConditionBlock";
import { Timeline } from "@/components/timeline/Timeline";

const mockOriginByType = (channelType: string) => {
  switch (channelType) {
    case "telephony":
      return "+14806754084";
      break;
    case "email":
      return "ragreene@gmail.com";
      break;
    default:
      return "Rachel Greene";
  }
};

const mockedConnectedTask = (time: string, channelType = "chat") => {
  return {
    data: {
      channelType,
      createdTime: 1651187948923,
      destination: "+19997770103",
      direction: "INBOUND",
      origin: mockOriginByType(channelType),
      outboundType: null,
      queueId: "ee472d93-7b28-483e-9cd9-6ed59db2dc9a",
      taskId: "94d8835d-c749-11ec-8573-7becd36cb425",
    },
    dataContentType: "string",
    id: "c9ae34eb-914a-40e9-92b3-522cf3f3ccc7",
    person: mockOriginByType(channelType),
    previously: "",
    source: "wxcc",
    specVersion: "1.0",
    time,
    type: "task:connected",
  };
};

const mockedStateChangeTask = (time: string) => {
  return {
    data: {
      agentId: "55de70fc-af58-40e8-b7f8-c23536a53e76",
      createdTime: 1651187948958,
      currentState: "wrapup",
      destination: "+19997770103",
      origin: "bob@gmail.com",
      queueId: "ee472d93-7b28-483e-9cd9-6ed59db2dc9a",
      taskId: "94d8835d-c749-11ec-8573-7becd36cb425",
      teamId: "9c73f123-0a33-414c-98db-b1169cccc8ce",
    },
    dataContentType: "string",
    id: "d30d8522-488d-4090-9bd8-a2e8febed0a4",
    person: "bob@gmail.com",
    previously: "",
    source: "wxcc",
    specVersion: "1.0",
    time,
    type: "agent:state_change",
  };
};

const mockedConnectTask = (time: string, channelType = "chat") => {
  return {
    data: {
      channelType,
      createdTime: 1651187946178,
      destination: "+19997770103",
      direction: "INBOUND",
      origin: mockOriginByType(channelType),
      outboundType: null,
      queueId: "ee472d93-7b28-483e-9cd9-6ed59db2dc9a",
      taskId: "94d8835d-c749-11ec-8573-7becd36cb425",
      workflowManager: null,
    },
    dataContentType: "string",
    id: "5565558c-eb37-4ec4-b121-7e4a39fff840",
    person: mockOriginByType(channelType),
    previously: "",
    source: "wxcc",
    specVersion: "1.0",
    time,
    type: "task:connect",
  };
};

const mockedNewTask = (time: string, channelType = "chat") => {
  return {
    data: {
      channelType,
      createdTime: 1651187945943,
      destination: "Chat_temp_WXC-CHAT-EP1",
      direction: "INBOUND",
      origin: mockOriginByType(channelType),
      outboundType: null,
      taskId: "94d8835d-c749-11ec-8573-7becd36cb425",
      workflowManager: null,
    },
    dataContentType: "string",
    id: "85224781-4738-40bb-9b48-f79f48effd55",
    person: mockOriginByType(channelType),
    previously: "",
    source: "wxcc",
    specVersion: "1.0",
    time,
    type: "task:new",
  };
};

const mockParkedTask = (time: string, channelType = "chat") => {
  return {
    data: {
      channelType,
      createdTime: 1651187717920,
      destination: "wxcc.ccp.switch@gmail.com",
      direction: "INBOUND",
      origin: mockOriginByType(channelType),
      outboundType: null,
      queueId: "7a682870-472b-4a0f-b3e9-01fadf4efcf3",
      taskId: "69a45a01-c737-11ec-bde5-e7810446c774",
      workflowManager: null,
    },
    dataContentType: "string",
    id: "9242ce2a-8666-4e8b-a100-078994ccb980",
    person: mockOriginByType(channelType),
    previously: "",
    source: "wxcc",
    specVersion: "1.0",
    time,
    type: "task:parked",
  };
};

const mockedEndedTask = (time: string, channelType = "chat") => {
  return {
    data: {
      channelType,
      createdTime: 1651182715768,
      direction: "INBOUND",
      origin: mockOriginByType(channelType),
      outboundType: null,
      reason: "Agent Left",
      taskId: "ffc6d07a-c73b-11ec-83e7-91a2c53dff83",
      terminatingParty: "Agent",
      workflowManager: null,
    },
    dataContentType: "string",
    id: "4e7e48eb-e5ef-4b17-9a29-908ff4e1de03",
    person: mockOriginByType(channelType),
    previously: "",
    source: "wxcc",
    specVersion: "1.0",
    time,
    type: "task:ended",
  };
};

export const profileViewMockTemplate = {
  Name: "Test Template 2",
  DatapointCount: 100,
  Attributes: [
    {
      version: "0.1",
      event: "Quote",
      metadata: "email",
      displayName: "Email",
      metadataType: "string",
      aggregationMode: "Value",
      type: "tab",
      limit: 1,
      tag: "email",
    },
    {
      version: "0.1",
      event: "Quote",
      metadata: "Make",
      metadataType: "string",
      displayName: "Make",
      aggregationMode: "Value",
      limit: 1,
      type: "table",
    },
    {
      version: "0.1",
      event: "Quote",
      metadataType: "string",
      metadata: "Model",
      displayName: "Model",
      aggregationMode: "Value",
      limit: 1,
      type: "table",
    },
    {
      version: "0.1",
      metadataType: "string",
      event: "Quote",
      metadata: "ltv",
      displayName: "LTV",
      aggregationMode: "Value",
      limit: 1,
      type: "table",
    },
    {
      version: "0.1",
      metadataType: "string",
      event: "Quote",
      metadata: "License Plate",
      displayName: "License Plate",
      aggregationMode: "Value",
      limit: 1,
      type: "table",
    },
    {
      version: "0.1",
      metadataType: "string",
      event: "Quote",
      metadata: "firstName",
      displayName: "First Name",
      aggregationMode: "Value",
      tag: "name",
      limit: 1,
      type: "inline",
    },
    {
      version: "0.1",
      event: "Entered ZipCode",
      metadataType: "string",
      metadata: "zipCode",
      displayName: "Zip Code",
      aggregationMode: "Value",
      limit: 1,
      type: "table",
    },
    {
      version: "0.1",
      event: "Quote",
      metadataType: "string",
      metadata: "street",
      displayName: "Street",
      aggregationMode: "Value",
      limit: 1,
      type: "table",
    },
    {
      version: "0.1",
      event: "Quote",
      metadataType: "string",
      metadata: "apt",
      displayName: "Apt",
      limit: 1,
      aggregationMode: "Value",
      type: "table",
    },
    {
      version: "0.1",
      event: "Quote",
      metadata: "city",
      displayName: "City",
      metadataType: "string",
      limit: 1,
      aggregationMode: "Value",
      type: "table",
    },
    {
      version: "0.1",
      event: "Quote",
      metadataType: "string",
      limit: 1,
      metadata: "lastName",
      displayName: "Last Name",
      aggregationMode: "Value",
      tag: "name",
      type: "inline",
    },
  ],
};

export const limitedProfileMock = [
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "email",
      displayName: "Email",
      aggregationMode: "Value",
      type: "table",
      tag: "email",
      limit: 1,
      Verbose: true,
    },
    result: ["bruce@gmail.com"],
    journeyevents: [
      {
        data: {
          firstName: "Bruce",
          lastName: "Springsteen",
          email: "bruce@gmail.com",
        },
        dataContentType: "application/json",
        id: "9cc22087-284d-46db-9e4e-fa7ed9723976",
        person: "560021-Venki",
        source: "Website",
        specVersion: "1.0",
        time: "2021-03-05T19:00:05.596Z",
        type: "Quote",
      },
    ],
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "firstName",
      displayName: "First Name",
      limit: 1,
      aggregationMode: "Value",
      tag: "name",
      type: "table",
    },
    result: ["Bruce"],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "lastName",
      displayName: "Last Name",
      limit: 1,
      aggregationMode: "Value",
      tag: "name",
      type: "table",
    },
    result: ["Springsteen"],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "Phone",
      displayName: "Phone",
      aggregationMode: "Value",
      limit: 1,
      type: "table",
    },
    result: [""],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "imgSrc",
      displayName: "imgSrc",
      limit: 1,
      aggregationMode: "Value",
      tag: "imgSrc",
      type: "table",
    },
    result: [
      "https://packagingnewsonline.com/wp-content/uploads/2021/06/Bruce-Springsteen-the-story-behind-the-iconic-cover-of-Born.jpg",
    ],
    journeyevents: null,
  },
];

export const profileMock = [
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "email",
      displayName: "Email",
      aggregationMode: "Value",
      type: "tab",
      tag: "email",
      limit: 1,
      Verbose: true,
    },
    result: ["v3nki"],
    journeyevents: [
      {
        data: {
          firstName: "Venki",
          lastName: "V",
          email: "v3nki",
        },
        dataContentType: "application/json",
        id: "9cc22087-284d-46db-9e4e-fa7ed9723976",
        person: "560021-Venki",
        source: "Website",
        specVersion: "1.0",
        time: "2021-03-05T19:00:05.596Z",
        type: "Quote",
      },
    ],
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "Make",
      displayName: "Make",
      aggregationMode: "Value",
      limit: 1,
      type: "table",
    },
    result: [""],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "Model",
      displayName: "Model",
      limit: 1,
      aggregationMode: "Value",
      type: "table",
    },
    result: [""],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "License Plate",
      displayName: "License Plate",
      limit: 1,
      aggregationMode: "Value",
      type: "table",
    },
    result: [""],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "ltv",
      displayName: "LTV",
      aggregationMode: "Value",
      limit: 1,
      type: "table",
    },
    result: [""],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "name",
      displayName: "First Name",
      limit: 1,
      aggregationMode: "Value",
      tag: "name",
      type: "inline",
    },
    result: ["Venki"],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      limit: 1,
      metadata: "zipCode",
      displayName: "Zip Code",
      aggregationMode: "Value",
      type: "table",
    },
    result: [""],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      metadata: "street",
      displayName: "Street",
      limit: 1,
      aggregationMode: "Value",
      type: "table",
    },
    result: ["street1"],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      limit: 1,
      metadata: "apt",
      displayName: "Apt",
      aggregationMode: "Value",
      type: "table",
    },
    result: ["apt1"],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      event: "Quote",
      limit: 1,
      metadata: "city",
      displayName: "City",
      aggregationMode: "Value",
      type: "table",
    },
    result: ["bengaluru"],
    journeyevents: null,
  },
  {
    query: {
      version: "0.1",
      limit: 1,
      event: "Quote",
      metadata: "lastName",
      displayName: "Last Name",
      aggregationMode: "Value",
      tag: "name",
      type: "inline",
    },
    result: ["V"],
    journeyevents: null,
  },
];

export const contactDataMock: ProfileView.ContactData = {
  contactChannels: {
    email: "v3nki@venki.com",
    phone: "555-555-5555",
    whatsApp: "MyProfileName",
  },
  name: "Venki",
  email: "v3nki@venki.com",
  label: "Preferred customer",
};

export const mockConditions: MultiLineCondition = {
  args: ["'Quote','ltv','Value' GT 5000", "'Quote','zipCode','Value' EQ 560021", "'Quote','firstName','Value' EQ XYZ"],
  logic: "AND",
};

export const mockOptionsList = [
  {
    version: "0.1",
    event: "Quote",
    metadata: "email",
    limit: 1,
    displayName: "Email",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    idForAttribute: "'Quote','email','Value'",
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    metadata: "Make",
    limit: 1,
    displayName: "Make",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    idForAttribute: "'Quote','Make','Value'",
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    metadata: "Model",
    limit: 1,
    displayName: "Model",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    idForAttribute: "'Quote','Model','Value'",
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    metadata: "License Plate",
    limit: 1,
    displayName: "License Plate",
    idForAttribute: "'Quote','License Plate','Value'",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    metadata: "ltv",
    limit: 1,
    idForAttribute: "'Quote','ltv','Value'",
    displayName: "LTV",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    metadata: "firstName",
    idForAttribute: "'Quote','firstName','Value'",
    limit: 1,
    displayName: "First Name",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    metadata: "zipCode",
    limit: 1,
    displayName: "Zip Code",
    lookbackDurationType: "days",
    idForAttribute: "'Quote','zipCode','Value'",
    lookbackPeriod: 50,
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    metadata: "street",
    limit: 1,
    idForAttribute: "'Quote','street','Value'",
    displayName: "Street",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    metadata: "apt",
    limit: 1,
    idForAttribute: "'Quote','apt','Value'",
    displayName: "Apt",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    metadata: "city",
    limit: 1,
    idForAttribute: "'Quote','city','Value'",
    displayName: "City",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    aggregationMode: "Value",
    verbose: false,
  },
  {
    version: "0.1",
    event: "Quote",
    idForAttribute: "'Quote','lastName','Value'",
    metadata: "lastName",
    limit: 1,
    displayName: "Last Name",
    lookbackDurationType: "days",
    lookbackPeriod: 50,
    aggregationMode: "Value",
    verbose: false,
  },
];

// export const bigTimeline: Timeline.CustomerEvent[] = [
//   {
//     data: {
//       summary:
//         "Sam called in regarding a possible data breach incident displayed alerts on her NetworkATX 1001 device. She wanted the threat analysis report. There were 5 attempts to breach the account. Account has been locked. Created the 24 Hour Unlock request.",
//     },
//     dataContentType: "application/json",
//     id: "515ec9e6-4c51-4cb3-baf8-db6e648a15c2",
//     person: "75082-Sam",
//     source: "Contact",
//     specVersion: "1.0",
//     time: "2021-09-12T21:28:45.658Z",
//     type: "Summary",
//   },
//   {
//     id: "a09ea52e-5432-4ac0-b53a-cd084234ef19",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-24T14:10:28.841Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "https://cjaas.cisco.com/try/webexwalkin/",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "a09ea52e-5432-4ac0-b53a-cd084234ef19",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-24T14:10:28.841Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "https://cjaas.cisco.com/try/webexwalkin/",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "3978911c-5dda-43a0-890e-5859e74765f5",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-24T14:10:15.325Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "https://cjaas.cisco.com/",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "60fe91a7-9c67-40fc-b247-97376b68e7c0",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Alex",
//     time: "2021-08-23T23:02:56.317Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "3a7ce8b0-9324-4605-9b14-f98e0ac4e9d0",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:19:57.73Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "https://cjaas.cisco.com/try/webexwalkin/",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "15ddbfa9-76f6-42b0-8e0b-048e40412853",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "anon-9c7b57cb-9a87-4402-b95b-34f66146cfea",
//     time: "2021-08-23T22:19:23.257Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "https://cjaas.cisco.com/try/webexwalkin/",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "2400d29a-3f1d-4503-84f1-ee1a9cf6243f",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:09:53.548Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "https://cjaas.cisco.com/try/webexwalkin/",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "f816f11f-ba09-4a65-ad36-80a4acb7c71f",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:06:47.086Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "https://cjaas.cisco.com/",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "11398c5d-21a1-4b6f-b186-190da7ef9c91",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:04:08.819Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "https://cjaas.cisco.com/try/webexwalkin/",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "e65172ec-8c36-4005-8718-236b5bc4cc9a",
//     type: "Walkin Offered",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:42.503Z",
//     data: {},
//   },
//   {
//     id: "6fdf274f-39f4-4514-a334-ccfd73b29740",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:42.098Z",
//     data: {
//       "FSD Level": "2",
//     },
//   },
//   {
//     id: "4cf6b384-3821-4198-862e-d65066bab4e8",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:41.195Z",
//     data: {
//       "Is FSD Certified?": "No",
//     },
//   },
//   {
//     id: "0bffea29-1430-4568-8b85-1e1dc7941544",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:37.584Z",
//     data: {
//       "Is EV?": "No",
//     },
//   },
//   {
//     id: "f1f74ca5-ac0b-4cc7-82f2-a4f13743e6f2",
//     type: "Trigger Sent to Server",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:32.349Z",
//     data: {
//       user: "30313-Zubinq",
//       agent: "zudang@cisco.com",
//     },
//   },
//   {
//     id: "97b8dc84-6b14-438b-b672-3846ee3bc955",
//     type: "Initiated Walk In",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:30.617Z",
//     data: {},
//   },
//   {
//     id: "a4509c99-24b4-4e33-b5d7-946172092645",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:30.511Z",
//     data: {
//       "Year of Make": "2014",
//     },
//   },
//   {
//     id: "d7770870-d001-4155-8962-08f2bb3d1cc0",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:27.173Z",
//     data: {
//       Model: "Civic",
//     },
//   },
//   {
//     id: "1f25e301-5991-4728-ac49-98f56576b046",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:23.538Z",
//     data: {
//       Make: "Honda",
//     },
//   },
//   {
//     id: "f4cbeaaa-81a5-4f78-b68a-f7f6798966ce",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:18.545Z",
//     data: {
//       "License Plate": "CFN1234",
//     },
//   },
//   {
//     id: "bc6aa49c-37da-4199-9fb4-aed4b0723e13",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:15.314Z",
//     data: {
//       street: "121 Summer Drive",
//       city: "Atlanta",
//     },
//   },
//   {
//     id: "ea0fe7d2-cc08-423a-ae3d-cc81f7a68eea",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:02:05.55Z",
//     data: {
//       firstName: "Zubinq",
//       lastName: "Dang",
//       email: "zubin@gmail.com",
//     },
//   },
//   {
//     id: "e974eb27-2efe-483b-9d98-322422443610",
//     type: "Identify",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "30313-Zubinq",
//     time: "2021-08-23T22:01:50.48Z",
//     data: {},
//   },
//   {
//     id: "5efe5dd0-1e74-4a10-b3e7-5d528e20dd17",
//     type: "Entered ZipCode",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "84000-Zubin",
//     time: "2021-08-23T22:01:47.828Z",
//     data: {
//       zipCode: "30313",
//     },
//   },
//   {
//     id: "20e19b09-8fd6-48d7-b6a2-27de340a6492",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "84000-Zubin",
//     time: "2021-08-23T22:00:51.573Z",
//     data: {
//       page: {
//         path: "/try/webexwalkin/",
//         referrer: "https://cjaas.cisco.com/",
//         search: "",
//         title: "Demo Assure",
//         url: "https://cjaas.cisco.com/try/webexwalkin/",
//       },
//     },
//   },
//   {
//     id: "8e35422b-7800-431c-892a-4916fff26c44",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "John  Smith",
//     time: "2021-08-23T21:49:56.195Z",
//     data: {
//       page: {
//         path: "/CJaas/index.html",
//         referrer: "http://127.0.0.1:53954/CJaas/index.html?",
//         search: "",
//         title: "Healthcare Now",
//         url: "http://127.0.0.1:53954/CJaas/index.html?",
//       },
//     },
//   },
//   {
//     id: "3be08d0f-d840-46e7-a7bd-48aa2c9e28d8",
//     type: "Identify",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "John  Smith",
//     time: "2021-08-23T21:48:26.038Z",
//     data: {},
//   },
//   {
//     id: "42023ce1-814e-4064-8b35-4ed1cb7cae27",
//     type: "Quote",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "John  Smith",
//     time: "2021-08-23T21:48:26.042Z",
//     data: {
//       firstName: "John ",
//       lastName: "Smith",
//       email: "john@john.com",
//     },
//   },
//   {
//     id: "3c8a6f79-e697-4bc5-9c8e-23f97e50be18",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "John Doe",
//     time: "2021-08-23T21:47:06.456Z",
//     data: {
//       page: {
//         path: "/CJaas/index.html",
//         referrer: "http://127.0.0.1:53954/CJaas/index.html?",
//         search: "",
//         title: "Healthcare Now",
//         url: "http://127.0.0.1:53954/CJaas/index.html?",
//       },
//     },
//   },
//   {
//     id: "9d21c61c-ee72-4263-bca2-cd8f76d1d8c5",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "John Doe",
//     time: "2021-08-23T21:46:46.308Z",
//     data: {
//       page: {
//         path: "/CJaas/index.html",
//         referrer: "http://127.0.0.1:53954/CJaas/index.html?",
//         search: "",
//         title: "Healthcare Now",
//         url: "http://127.0.0.1:53954/CJaas/index.html?",
//       },
//     },
//   },
//   {
//     id: "ad6f9f3b-0cc9-4d52-aa28-a33dd6ef9f81",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "John Doe",
//     time: "2021-08-23T21:46:40.932Z",
//     data: {
//       page: {
//         path: "/CJaas/index.html",
//         referrer: "http://127.0.0.1:53954/CJaas/index.html?",
//         search: "",
//         title: "Healthcare Now",
//         url: "http://127.0.0.1:53954/CJaas/index.html?",
//       },
//     },
//   },
//   {
//     id: "8bf9440f-7e28-4655-bcfb-12975ec78012",
//     type: "Page Visit",
//     source: "Website",
//     specVersion: "1.0",
//     dataContentType: "application/json",
//     person: "John Doe",
//     time: "2021-08-23T21:43:22.725Z",
//     data: {
//       page: {
//         path: "/CJaas/index.html",
//         referrer: "http://127.0.0.1:53954/CJaas/index.html?",
//         search: "",
//         title: "CJaas",
//         url: "http://127.0.0.1:53954/CJaas/index.html?",
//       },
//     },
//   },
// ];

export const emptyMock: Timeline.CustomerEvent[] = [];

const nowDate = new Date();
const isoNowStr = nowDate.toISOString(); // "2022-01-15T16:17:30.814Z";
const isoTwoSecondsStr = new Date(nowDate.setDate(nowDate.getSeconds() - 2)).toISOString();

const isoTwoHourStr = new Date(nowDate.setDate(nowDate.getHours() - 2)).toISOString();
const isoTwoDayStr = new Date(nowDate.setDate(nowDate.getDay() - 2)).toISOString();
const isoEightDayStr = new Date(nowDate.setDate(nowDate.getDay() - 8)).toISOString();
const isoTwoWeeksStr = new Date(nowDate.setDate(nowDate.getDay() - 14)).toISOString();
const isoTwoMonthsStr = new Date(nowDate.setDate(nowDate.getDay() - 60)).toISOString();

export const historicalEvents: Timeline.CustomerEvent[] = [
  mockedConnectedTask(isoNowStr, "email"),
  mockedConnectTask(isoNowStr, "email"),
  mockedConnectTask(isoNowStr, "telephony"),
  mockedConnectedTask(isoNowStr, "telephony"),
  mockedNewTask(isoTwoHourStr, "email"),
  mockedStateChangeTask(isoTwoDayStr),
  mockedStateChangeTask(isoTwoDayStr),
  mockedNewTask(isoEightDayStr),
  mockedEndedTask(isoTwoWeeksStr),
  mockedConnectedTask(isoTwoMonthsStr),
];

export const fiveNewEvents: Timeline.CustomerEvent[] = [
  mockedConnectedTask(isoNowStr),
  mockedConnectTask(isoNowStr, "email"),
  mockedStateChangeTask(isoNowStr),
  mockedNewTask(isoNowStr, "telephony"),
  mockedEndedTask(isoNowStr),
];
